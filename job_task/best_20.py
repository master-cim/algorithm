## Набор новых студентов
## Подходило 1 сентября, университет готовился к наплыву абитуриентов. 
# Так вышло, что Вы, как программист, должны были помочь в отборе тех абитуриентов,
# кто поступит в университет на конкурсной основе на специальность программиста. 

# Схема была проста: есть абитуриент, у него есть результаты сданных экзаменов по математике,
# русскому и информатике. Соответственно, у каждого потенциального студента
# есть сумма баллов по этим экзаменам. Также есть дополнительные (extra_scores)
# баллы: за волонтерство, участие в олимпиадах и другие активности. 

# Вам нужно отобрать 20 человек, у которых суммарный балл выше, чем у других.
# В случае, если не получается однозначно определить 20 человек (например, 2 человека 
# набрали одинаковое СУММАРНОЕ количество баллов и претендуют на 20 место в списке,
# стоит их ранжировать по "профильным" дисциплинам - "информатике" и "математике").

# Функция принимает на вход список сводной информации по абитуриентам (candidates)
# и возвращает список с  именами 20 человек,
# набравших наибольшее СУММАРНОЕ количество баллов (с учетом extra баллов),
# которые станут студентами университета.   

candidates = [
    {"name": "Vasya",
     "scores": {"math": 33, "russian_language": 92, "computer_science": 48},
     "extra_scores": 1},
    {"name": "Fedya",
     "scores": {"math": 33, "russian_language": 85, "computer_science": 42},
     "extra_scores": 2},
    {"name": "Petya",
     "scores": {"math": 92, "russian_language": 33, "computer_science": 48},
     "extra_scores": 1}
    ]



def find_top_20(arr):
    dict_work = {}
    for item in arr:
        name = item['name']
        total_income = sum([value for value in item['scores'].values()]) + item['extra_scores']
        dict_work[name] = total_income
    print(sorted(dict_work)[:20])


if __name__ == '__main__':
    arr = candidates
    find_top_20(arr)
